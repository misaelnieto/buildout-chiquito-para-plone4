[buildout]
extends = base.cfg
parts +=
    instance-debug
    varnish-build
    varnish
    supervisor
    backup
    backup-template
    backup-schedule
    maintenance-schedule
    apache-configuration-frontend
    apache-configuration-backend

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${http-ports:zeo-server}
blob-storage = var/blobstorage
monitor-address = 127.0.0.1:${http-ports:zeo-monitor}
pack-days = ${maintenance:pack-days}
eggs = 
	Zope2	
	iw.rotatezlogs
zeo-log-custom =
    %import iw.rotatezlogs
    <rotatelogfile>
    path ${buildout:directory}/var/log/zeo.log
    max-bytes 1MB
    backup-count 5
    </rotatelogfile>

[instance]
zeo-client = on
zeo-address = ${http-ports:zeo-server}
shared-blob = on
mailinglogger = 
    <mailing-logger>
      level error
      flood-level 10
      from ${reporting:mail-logger}
      to ${reporting:mail-for-errors}
      subject [Error en ${reporting:site-name}] [%(hostname)s] %(line)s
    </mailing-logger>
#http-force-connection-close = on
#Log rotating
eggs += iw.rotatezlogs
event-log-custom =
    %import iw.rotatezlogs
    <rotatelogfile>
    path ${buildout:directory}/var/log/instance.log
    max-bytes 1MB
    backup-count 5
    </rotatelogfile>
access-log-custom =
    %import iw.rotatezlogs
    <rotatelogfile>
    path ${buildout:directory}/var/log/instance-Z2.log
    max-bytes 1MB
    backup-count 5
    </rotatelogfile>
    
[instance-debug]
<= instance
http-address = ${http-ports:instance-debug}

[varnish-build]
recipe = zc.recipe.cmmi
#1.1 (2010-08-05) - Updated Varnish to 2.1.3. [hannosch]
url = ${varnish:download-url}

[varnish]
recipe = plone.recipe.varnish
daemon=${buildout:directory}/parts/varnish-build/sbin/varnishd
bind = 127.0.0.1:${http-ports:varnish}
backends = 127.0.0.1:${http-ports:instance}
cache-size = 1GB
mode = foreground

[supervisor]
recipe = collective.recipe.supervisor
plugins = superlance
port = ${http-ports:supervisor}
serverurl = http://localhost:${http-ports:supervisor}/
user = ${password:user}
password = ${password:password}
programs =
    10 zeoserver ${buildout:directory}/bin/zeoserver [foreground] ${zeoserver:location} true
    10 instance  ${buildout:directory}/bin/instance  [console]    ${instance:location}  true
    20 varnish   ${buildout:directory}/bin/varnish                ${buildout:directory} true
eventlisteners =
#Check every 60 seconds that no child process has exceeded 
#it's RSS memory quota
    MemoryMonitor TICK_60 ${buildout:bin-directory}/memmon [-a ${quotas:instance-memory} -m ${reporting:mail-for-errors}]
#check every 60 seconds whether the plone instance is alive
#    HttpOk1 TICK_60 ${buildout:bin-directory}/httpok [-p instance -t ${quotas:instance-timeout} http://localhost:${http-ports:instance}/${reporting:instance-name}]

[backup]
recipe = collective.recipe.backup
#Keep the last 4 backups
keep = 4
#Always make a full backup
full = true
#Gzipit
gzip = true

[backup-template]
recipe = collective.recipe.template
inline =
    #!/bin/bash
    ${buildout:bin-directory}/zeopack
    ${buildout:bin-directory}/backup -q
    blob=$(basename `ls ${backup:location}|tail -n1` .fsz)
    cd ${buildout:directory}
    tar zcf ${backup:location}/$blob.tar.gz var/blobstorage
    #Solo guardar los ultimos 4 backups
    #Eliminar a partir de la quinta
    toremove=`ls ${backup:location}/*.tar.gz|sort -r|tail -n+5`
    if [ ! -z "$toremove"]; then rm $toremove; fi
    #Podemos mandar cosas a otros servidores usando rsync
    #rsync -a --delete ${backup:location}/ user@host:/home/user/extranet/backups/
    #rsync -a --delete ${buildout:directory}/var/log/user@host:/home/user/extranet/log/
output = ${buildout:bin-directory}/backup.sh
mode = 755

[backup-schedule]
recipe = z3c.recipe.usercrontab
#Correr backup todos los sabados a las 3am
#TODOFalta correr el backup incremental todos los dÃ­as.
times = 0 3 * * 6
command = ${backup-template:output}

[maintenance-schedule]
recipe = z3c.recipe.usercrontab
#Pack the database everyday at 2 am.
times = 0 1 * * *
command = ${buildout:bin-directory}/zeopack

[apache-configuration-frontend] 
recipe = collective.recipe.template
inline = 
    <IfModule mod_proxy.c>
        <Proxy proxy:http://127.0.0.1:${http-ports:varnish}/> Order deny,allow Allow from localhost </Proxy>
    </IfModule> RewriteEngine On 
    #Solo para debug 
    #RewriteLog ${buildout:directory}/var/log/apache_rewritelog.log 
    #RewriteLogLevel 2
    RewriteRule ^/(.*)/$ http://127.0.0.1:${http-ports:varnish}/VirtualHostBase/http/%{HTTP_HOST}:80/${reporting:instance-name}/VirtualHostRoot/$1 [L,P] RewriteRule ^/(.*)
    http://127.0.0.1:${http-ports:varnish}/VirtualHostBase/http/%{HTTP_HOST}:80/${reporting:instance-name}/VirtualHostRoot/$1 [L,P]

output = ${buildout:parts-directory}/apache/frontend.conf
mode = 644

[apache-configuration-backend]
#backend de edicion
recipe = collective.recipe.template
inline =
       <IfModule mod_proxy.c>
         <Proxy proxy:http://127.0.0.1:${http-ports:instance}/>
           Order deny,allow
           Allow from localhost
         </Proxy>
       </IfModule>
       RewriteEngine On
       #Solo para debug
       #RewriteLog      ${buildout:directory}/var/log/apache_rewritelog.log
       #RewriteLogLevel 2
       RewriteRule ^/(.*)/$ http://127.0.0.1:${http-ports:instance}/VirtualHostBase/http/%{HTTP_HOST}:80/${reporting:instance-name}/VirtualHostRoot/$1 [L,P]
       RewriteRule ^/(.*) http://127.0.0.1:${http-ports:instance}/VirtualHostBase/http/%{HTTP_HOST}:80/${reporting:instance-name}/VirtualHostRoot/$1 [L,P]

output = ${buildout:parts-directory}/apache/backend.conf
mode = 644
